//
//  HomeInteractor.swift
//  CleanSwiftArchitecture
//
//  Created by cw-james on 2022/03/29.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic {
    func requestPopup(request: Home.ShowPopoup.Request)
}

protocol HomeDataStore {
    var popups: [Popup] { get set }
}

class HomeInteractor {
    // MARK: Variables
    var presenter: HomePresentationLogic?
    var worker: HomeWorker?
    var popups: [Popup] = []
}

// MARK: - BusinessLogic Protocol
extension HomeInteractor: HomeBusinessLogic {
    func requestPopup(request: Home.ShowPopoup.Request) {
        worker?.fetchPopups(placement: request.placement, completion: { [weak self] popups in
            guard let self = self else { return }
            
            self.popups = popups
            
            let response = Home.ShowPopoup.Response(popups: popups)
            self.presenter?.presentPopup(response: response)
        })
    }
}

// MARK: - DataStore Protocol
extension HomeInteractor: HomeDataStore {
    
}
